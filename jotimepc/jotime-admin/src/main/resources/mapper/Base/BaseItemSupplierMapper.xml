<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jotime.web.mapper.base.BaseItemSupplierMapper">

    <resultMap type="BaseItemSupplier" id="BaseItemSupplierResult">
        <result property="id" column="id"/>
        <result property="itemId" column="item_id"/>
        <result property="supplierId" column="supplier_id"/>
        <result property="status" column="status"/>
        <result property="note" column="note"/>
    </resultMap>

    <resultMap type="BaseItemSupplierVo" id="BaseItemSupplierVoResult">
        <result property="id" column="id"/>
        <result property="itemId" column="item_id"/>
        <result property="supplierId" column="supplier_id"/>
        <result property="supplierCode" column="supplier_code"/>
        <result property="supplierName" column="supplier_name"/>
        <result property="status" column="status"/>
        <result property="note" column="note"/>
    </resultMap>

    <sql id="selectBaseItemSupplierVo">
        select id,
               item_id,
               supplier_id,
               status,
               note,
               create_by,
               create_time,
               update_by,
               update_time
        from base_item_supplier
    </sql>

    <select id="selectBaseItemSupplierList" parameterType="BaseItemSupplier" resultMap="BaseItemSupplierResult">
        <include refid="selectBaseItemSupplierVo"/>
        <where>
            <if test="itemId != null ">and item_id = #{itemId}</if>
            <if test="supplierId != null ">and supplier_id = #{supplierId}</if>
            <if test="status != null ">and status = #{status}</if>
            <if test="note != null  and note != ''">and note = #{note}</if>
        </where>
    </select>

    <select id="selectBaseItemSupplierByItemId" parameterType="string" resultMap="BaseItemSupplierVoResult">
        select bis.id,
               bis.item_id,
               bis.supplier_id,
               bis.status,
               bis.note,
               bis.create_by,
               bis.create_time,
               bis.update_by,
               bis.update_time,
               bs.supplier_code,
               bs.supplier_name
        from base_item_supplier bis
                 left join base_supplier bs on bis.supplier_id = bs.id
        where bis.item_id = #{itemId}
    </select>
    <select id="selectBaseItemSupplierListByItemId" parameterType="Long" resultMap="BaseItemSupplierVoResult">
        select bis.id,
               bis.item_id,
               bis.supplier_id,
               bis.status,
               bis.note,
               bs.supplier_code,
               bs.supplier_name
        from base_item_supplier bis
                 left join base_supplier bs on bis.supplier_id = bs.id
        where bis.item_id = #{itemId}
          and bis.status != 1
    </select>

    <select id="selectBaseItemSupplierById" parameterType="Long" resultMap="BaseItemSupplierResult">
        <include refid="selectBaseItemSupplierVo"/>
        where id = #{id}
    </select>

    <insert id="insertBaseItemSupplier" parameterType="BaseItemSupplier">
        insert into base_item_supplier
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="itemId != null">item_id,</if>
            <if test="supplierId != null">supplier_id,</if>
            <if test="status != null">status,</if>
            <if test="note != null">note,</if>
            create_by,
            create_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="itemId != null">#{itemId},</if>
            <if test="supplierId != null">#{supplierId},</if>
            <if test="status != null">#{status},</if>
            <if test="note != null">#{note},</if>
            #{createBy},
            sysdate()
        </trim>
    </insert>

    <update id="updateBaseItemSupplier" parameterType="BaseItemSupplier">
        update base_item_supplier
        <trim prefix="SET" suffixOverrides=",">
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="supplierId != null">supplier_id = #{supplierId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="note != null">note = #{note},</if>
            update_by = #{updateBy},
            update_time = sysdate()
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBaseItemSupplierById" parameterType="Long">
        delete
        from base_item_supplier
        where id = #{id}
    </delete>

    <delete id="deleteBaseItemSupplierByIds" parameterType="String">
        delete from base_item_supplier where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteBaseItemSupplierByItemId" parameterType="Long">
        delete
        from base_item_supplier
        where item_id = #{itemId}
    </delete>
</mapper>