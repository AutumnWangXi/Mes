<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jotime.web.mapper.base.BaseLineMapper">

    <resultMap type="BaseLine" id="BaseLineResult">
        <result property="id"    column="id"    />
        <result property="lineCode"    column="line_code"    />
        <result property="lineName"    column="line_name"    />
        <result property="workshopId"    column="workshop_id"    />
        <result property="status"    column="status"    />
        <result property="note"    column="note"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>
    <resultMap type="BaseLineVo" id="BaseLineVoResult">
        <result property="id"    column="id"    />
        <result property="lineCode"    column="line_code"    />
        <result property="lineName"    column="line_name"    />
        <result property="workshopId"    column="workshop_id"    />
        <result property="workshopName"    column="workshop_name"    />
        <result property="status"    column="status"    />
        <result property="note"    column="note"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>
    <sql id="selectBaseLineVo">
        select id, line_code, line_name, workshop_id, status, note, create_by, create_time, update_by, update_time from base_line
    </sql>

    <select id="selectBaseLineList" parameterType="BaseLine" resultMap="BaseLineResult">
        <include refid="selectBaseLineVo"/>
        <where>
            <if test="lineCode != null  and lineCode != ''"> and line_code = #{lineCode}</if>
            <if test="lineName != null  and lineName != ''"> and line_name like concat('%', #{lineName}, '%')</if>
        </where>
    </select>

    <select id="selectBaseLineVoList" parameterType="BaseLineVo" resultMap="BaseLineVoResult">
        select l.id, l.line_code, l.line_name, l.workshop_id, l.status, l.note, l.create_by,
               l.create_time, l.update_by, l.update_time,w.workshop_name from base_line l
        LEFT JOIN  base_workshop w ON(w.id=l.workshop_id)
        <where>
            <if test="lineCode != null  and lineCode != ''"> and l.line_code = #{lineCode}</if>
            <if test="lineName != null  and lineName != ''"> and l.line_name like concat('%', #{lineName}, '%')</if>
        </where>
    </select>

    <select id="selectBaseLineById" parameterType="Long" resultMap="BaseLineResult">
        <include refid="selectBaseLineVo"/>
        where id = #{id}
    </select>

    <insert id="insertBaseLine" parameterType="BaseLine" useGeneratedKeys="true" keyProperty="id">
        insert into base_line
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="lineCode != null and lineCode != ''">line_code,</if>
            <if test="lineName != null and lineName != ''">line_name,</if>
            <if test="workshopId != null and workshopId != ''">workshop_id,</if>
            <if test="status != null">status,</if>
            <if test="note != null">note,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="lineCode != null and lineCode != ''">#{lineCode},</if>
            <if test="lineName != null and lineName != ''">#{lineName},</if>
            <if test="workshopId != null and workshopId != ''">#{workshopId},</if>
            <if test="status != null">#{status},</if>
            <if test="note != null">#{note},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBaseLine" parameterType="BaseLine">
        update base_line
        <trim prefix="SET" suffixOverrides=",">
            <if test="lineCode != null and lineCode != ''">line_code = #{lineCode},</if>
            <if test="lineName != null and lineName != ''">line_name = #{lineName},</if>
            <if test="workshopId != null and workshopId != ''">workshop_id = #{workshopId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="note != null">note = #{note},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBaseLineById" parameterType="Long">
        delete from base_line where id = #{id}
    </delete>

    <delete id="deleteBaseLineByIds" parameterType="String">
        delete from base_line where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
